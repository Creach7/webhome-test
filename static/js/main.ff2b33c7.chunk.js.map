{"version":3,"sources":["components/form-section/form-section.js","components/comments-navigation/comments-navigation.js","components/comments-item/comments-item.js","components/comments-section/comments-section.js","services/service.js","components/App/App.js","index.js"],"names":["FormSection","postComment","useState","name","setName","text","setText","nameIsWrong","setNameIsWrong","textIsWrong","setTextIsWrong","className","onSubmit","e","preventDefault","console","log","itIsOk","type","placeholder","onChange","target","value","CommentsNavigation","firstPage","lastPage","changePage","pagesCount","wrongText","setwrongText","pagins","push","href","onClick","i","makePagins","onKeyDown","key","test","parseInt","CommentsItem","CommentsSection","getComments","addComments","comments","setFirstPage","setLastPage","page","button","map","comment","id","postData","url","data","a","fetch","method","headers","body","res","json","getResource","ok","Error","status","App","state","apiBase","last_page","then","setState","concat","JSON","stringify","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff2b33c7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../../css/container.css';\r\nimport './form-section.css';\r\n\r\nexport default function FormSection({ postComment }) {\r\n  const [name, setName] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [nameIsWrong, setNameIsWrong] = useState(false);\r\n  const [textIsWrong, setTextIsWrong] = useState(false);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(name, text);\r\n    let itIsOk = true;\r\n    if (name === '') {\r\n      setNameIsWrong(true);\r\n      itIsOk = false;\r\n    }\r\n    if (text === '') {\r\n      setTextIsWrong(true);\r\n      itIsOk = false;\r\n    }\r\n    if (itIsOk) {\r\n      postComment(name, text);\r\n      setName('');\r\n      setText('');\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <form\r\n        className='container column'\r\n        onSubmit={onSubmit}>\r\n        <input\r\n          type='text'\r\n          placeholder='Введите имя'\r\n          className={'input' + (nameIsWrong ? ' form-section__wrong_input' : '')}\r\n          onChange={(e) => {\r\n            if (nameIsWrong) {\r\n              setNameIsWrong(false);\r\n            }\r\n            setName(e.target.value);\r\n          }}\r\n          value={name}\r\n        />\r\n        <textarea\r\n          type='text'\r\n          className={'form-section__text input' + (textIsWrong ? ' form-section__wrong_input' : '')}\r\n          placeholder='Напишите коментарий'\r\n          onChange={(e) => {\r\n            if (textIsWrong) {\r\n              setTextIsWrong(false);\r\n            }\r\n            setText(e.target.value);\r\n          }}\r\n          value={text}\r\n        />\r\n        <button\r\n          type='submit'\r\n        >\r\n          Отправить\r\n        </button>\r\n      </form >\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport '../../css/container.css';\r\nimport './comments-navigation.css';\r\n\r\nexport default function CommentsNavigation({ firstPage, lastPage, changePage, pagesCount }) {\r\n  const makePagins = () => {\r\n    const pagins = [];\r\n\r\n    pagins.push(<a className='pagin' key='<<' href='/' onClick={(e) => {\r\n      e.preventDefault();\r\n      if (firstPage !== 1) {\r\n        changePage(firstPage - 1)\r\n      }\r\n    }}>{'<<'}</a>);\r\n\r\n    if (firstPage > 3) {\r\n      for (let i = 1; i <= 3 && i < firstPage - 2; i++) {\r\n        pagins.push(\r\n          <a key={i} href='/' onClick={(e) => {\r\n            e.preventDefault();\r\n            changePage(i)\r\n          }}>{`${i}`}</a>\r\n        );\r\n      }\r\n    }\r\n    if (firstPage > 6) {\r\n      pagins.push(<p key='1points'>...</p>)\r\n    }\r\n    for (let i = firstPage - 2; i <= lastPage + 2 && i <= pagesCount; i++) {\r\n      if (i <= 0) {\r\n        continue\r\n      }\r\n      if (i === firstPage) {\r\n        if (firstPage !== lastPage) {\r\n          pagins.push(\r\n            <p key={`${firstPage}-${lastPage}`}>{`${firstPage}-${lastPage}`}</p>\r\n          );\r\n          i = lastPage + 1;\r\n        } else {\r\n          pagins.push(\r\n            <p key={`${firstPage}`}>{`${firstPage}`}</p>\r\n          );\r\n        }\r\n        continue;\r\n      }\r\n      pagins.push(\r\n        <a key={i} href='/' onClick={(e) => {\r\n          e.preventDefault();\r\n          changePage(i)\r\n        }}>{`${i}`}</a>\r\n      );\r\n    }\r\n\r\n    if (lastPage < pagesCount - 6) {\r\n      pagins.push(<p key='2points'>...</p>)\r\n    }\r\n\r\n    if (lastPage < pagesCount - 3) {\r\n      for (let i = pagesCount - 2; i <= pagesCount && i > lastPage + 2; i++) {\r\n        pagins.push(\r\n          <a key={i} href='/' onClick={(e) => {\r\n            e.preventDefault();\r\n            changePage(i)\r\n          }}>{`${i}`}</a>\r\n        );\r\n      }\r\n    }\r\n\r\n    pagins.push(<a key='>>' href='/' onClick={(e) => {\r\n      e.preventDefault();\r\n      if (lastPage !== pagesCount) {\r\n        changePage(lastPage + 1)\r\n      }\r\n    }}>{'>>'}</a>);\r\n    return pagins;\r\n  }\r\n  const [text, setText] = useState('');\r\n  const [wrongText, setwrongText] = useState(false);\r\n  return (\r\n    <div>\r\n      <div className='container row navigation'>\r\n        {makePagins()}\r\n      </div>\r\n      <input\r\n        type='text'\r\n        placeholder='Введите страницу'\r\n        className={`navigation-input ${wrongText ? 'wrong-text' : ''}`}\r\n        onChange={(e) => {\r\n          setwrongText(false);\r\n          setText(e.target.value);\r\n        }}\r\n        onKeyDown={(e) => {\r\n          if (e.key === 'Enter') {\r\n            if (/^\\d+$/.test(text) && text > 0 && text <= pagesCount) {\r\n              changePage(parseInt(text));\r\n            } else {\r\n              setwrongText(true);\r\n            }\r\n          }\r\n        }}\r\n        value={text}>\r\n      </input>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n// import '../../css/container.css';\r\nimport './comments-item.css';\r\n\r\nexport default function CommentsItem({ name, text }) {\r\n  return (\r\n    <div className='item'>\r\n      <p className='item-name'>\r\n        {name} пишет: \r\n      </p>\r\n      <p>\r\n        {text}\r\n      </p>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\n// import '../../css/container.css';\r\nimport './comments-section.css';\r\n\r\n\r\nimport CommentsNavigation from '../comments-navigation/comments-navigation';\r\nimport CommentsItem from '../comments-item/comments-item';\r\n\r\nexport default function CommentsSection({ getComments, addComments, comments, pagesCount }) {\r\n  const [firstPage, setFirstPage] = useState(1);\r\n  const [lastPage, setLastPage] = useState(1);\r\n  const changePage = (page) => {\r\n    setFirstPage(page);\r\n    setLastPage(page);\r\n    getComments(page);\r\n  }\r\n  const button = (lastPage !== pagesCount) ?\r\n    (<button\r\n      className='button-more'\r\n      onClick={() => {\r\n        const page = lastPage + 1;\r\n        setLastPage(page);\r\n        addComments(page);\r\n      }}\r\n    >\r\n      Показать еще\r\n    </button>)\r\n    : (<></>);\r\n  return (\r\n    <div>\r\n      <CommentsNavigation firstPage={firstPage} lastPage={lastPage} changePage={changePage} pagesCount={pagesCount} />\r\n      <ul className='list'>\r\n        {\r\n          comments.map((comment) => {\r\n            return (\r\n              <li key={comment.id}>\r\n                <CommentsItem name={comment.name} text={comment.text} />\r\n              </li>\r\n            );\r\n          })\r\n        }\r\n      </ul>\r\n      {button}\r\n      <CommentsNavigation firstPage={firstPage} lastPage={lastPage} changePage={changePage} pagesCount={pagesCount} />\r\n    </div >\r\n  );\r\n}\r\n","const postData = async (url, data) => {\r\n  const res = await fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    },\r\n    body: data\r\n  });\r\n\r\n  return await res.json();\r\n};\r\nconst getResource = async (url) => {\r\n  const res = await fetch(url);\r\n\r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n  }\r\n  return await res.json();\r\n};\r\nexport { postData, getResource };","import React from 'react';\nimport './App.css';\n\nimport FormSection from '../form-section/form-section';\nimport CommentsSection from '../comments-section/comments-section';\n\nimport { postData, getResource } from '../../services/service';\n\nclass App extends React.Component {\n  state = {\n    apiBase: 'https://jordan.ashton.fashion/api/goods/30/comments',\n    comments: [],\n    last_page: 0\n  };\n  componentDidMount() {\n    this.getComments(1);\n  }\n  getComments = (page) => {\n    getResource(`${this.state.apiBase}?page=${page}`).then((data) => {\n      this.setState(state => {\n        return {\n          comments: data.data,\n          last_page: data.last_page\n        }\n      })\n    });\n  }\n  addComments = (page) => {\n    getResource(`${this.state.apiBase}?page=${page}`).then((data) => {\n      this.setState(state => {\n        return {\n          comments: state.comments.concat(data.data),\n          last_page: data.last_page\n        }\n      })\n    });\n  }\n  postComment = (name, text) => {\n    postData(\n      this.state.apiBase,\n      JSON.stringify({\n        name: name,\n        text: text\n      })\n    );\n  }\n  render() {\n    const { comments, last_page } = this.state;\n    return (\n      <div className=\"App\">\n        <FormSection postComment={this.postComment} />\n        <CommentsSection getComments={this.getComments} addComments={this.addComments} comments={comments} pagesCount={last_page} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}